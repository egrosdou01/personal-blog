"use strict";(self.webpackChunkpersonal_blog=self.webpackChunkpersonal_blog||[]).push([[3343],{909:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>i,default:()=>h,frontMatter:()=>l,metadata:()=>a,toc:()=>c});var s=n(4848),o=n(8453);const l={slug:"sveltos-cilium-tetragon-day2-operations",title:"Sveltos: Optimising Day-2 Operations with Cilium and Tetragon",authors:["egrosdou01"],date:new Date("2024-10-05T00:00:00.000Z"),tags:["sveltos","cilium","tetragon","open-source","kubernetes","gitops","devops","2024"]},i=void 0,a={permalink:"/personal-blog/blog/sveltos-cilium-tetragon-day2-operations",source:"@site/blog/2024-10-05-sveltos-day2-operations/sveltos-cilium-tetragon-day2-operations.md",title:"Sveltos: Optimising Day-2 Operations with Cilium and Tetragon",description:"Introduction",date:"2024-10-05T00:00:00.000Z",tags:[{inline:!1,label:"Sveltos",permalink:"/personal-blog/blog/tags/sveltos",description:"Open source project Sveltos"},{inline:!1,label:"Cilium",permalink:"/personal-blog/blog/tags/cilium",description:"eBPF-based Networking, Security, and Observability for Kubernetes"},{inline:!1,label:"Tetragon",permalink:"/personal-blog/blog/tags/tetragon",description:"Cilium Tetragon - powerful real-time, eBPF-based Security Observability and Runtime Enforcement"},{inline:!1,label:"Open Source",permalink:"/personal-blog/blog/tags/open-source",description:"Open source software"},{inline:!1,label:"Kubernetes",permalink:"/personal-blog/blog/tags/kubernetes",description:"Container orchestration platform for automating application deployment, scaling, and management"},{inline:!1,label:"GitOps",permalink:"/personal-blog/blog/tags/gitops",description:"Operational framework that uses Git as a single source of truth for declarative infrastructure and applications"},{inline:!1,label:"DevOps",permalink:"/personal-blog/blog/tags/devops",description:"Set of practices that combines software development and IT operations"},{inline:!1,label:"2024",permalink:"/personal-blog/blog/tags/2024",description:"The year the post went online"}],readingTime:7.95,hasTruncateMarker:!0,authors:[{name:"Eleni Grosdouli",title:"DevOps Consulting Engineer at Cisco Systems",url:"https://github.com/egrosdou01",imageURL:"https://github.com/egrosdou01.png",key:"egrosdou01"}],frontMatter:{slug:"sveltos-cilium-tetragon-day2-operations",title:"Sveltos: Optimising Day-2 Operations with Cilium and Tetragon",authors:["egrosdou01"],date:"2024-10-05T00:00:00.000Z",tags:["sveltos","cilium","tetragon","open-source","kubernetes","gitops","devops","2024"]},unlisted:!1,prevItem:{title:"K8s Troubleshooting Insights: Looking into CoreDNS Issues",permalink:"/personal-blog/blog/k8s-troubleshooting-insights-coredns"},nextItem:{title:"Sveltos Tiers: Efficient Day-2 Operations and Targeted Updates",permalink:"/personal-blog/blog/sveltos-introduction-to-tiers"}},r={authorsImageUrls:[void 0]},c=[{value:"Introduction",id:"introduction",level:2},{value:"Lab Setup",id:"lab-setup",level:2},{value:"GitHub Resources",id:"github-resources",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Step 1: Cluster Registration with\xa0Sveltos",id:"step-1-cluster-registration-withsveltos",level:2},{value:"Example Registration",id:"example-registration",level:3},{value:"Validation",id:"validation",level:3},{value:"Step 2: Custom ConfigMap, Cilium, Tetragon Deployment",id:"step-2-custom-configmap-cilium-tetragon-deployment",level:2},{value:"ClusterProfile - Cilium, Tetragon, and ConfigMap",id:"clusterprofile---cilium-tetragon-and-configmap",level:3},{value:"Deploy ConfigMap and ClusterProfile - Management Cluster",id:"deploy-configmap-and-clusterprofile---management-cluster",level:3},{value:"Validation - Management Cluster",id:"validation---management-cluster",level:3},{value:"Validation - Managed Cluster",id:"validation---managed-cluster",level:3},{value:"Step 3: Deploy ClusterHealthCheck and HealthCheck",id:"step-3-deploy-clusterhealthcheck-and-healthcheck",level:2},{value:"HealthCheck and ClusterHealthCheck Defintion",id:"healthcheck-and-clusterhealthcheck-defintion",level:3},{value:"Deploy HealthCheck and ClusterHealthCheck - Management Cluster",id:"deploy-healthcheck-and-clusterhealthcheck---management-cluster",level:3},{value:"Validation - Management Cluster",id:"validation---management-cluster-1",level:3},{value:"Sveltos for Day-2 Operations Benefits",id:"sveltos-for-day-2-operations-benefits",level:2},{value:"Conclusions",id:"conclusions",level:2},{value:"Resources",id:"resources",level:2},{value:"\u2709\ufe0f Contact",id:"\ufe0f-contact",level:2},{value:"\ud83d\udc4f Support this\xa0project",id:"-support-thisproject",level:2}];function d(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"introduction",children:"Introduction"}),"\n",(0,s.jsxs)(t.p,{children:["How easy is it to handle ",(0,s.jsx)(t.strong,{children:"Day-2"})," operations with existing CI/CD tooling? ",(0,s.jsx)(t.a,{href:"https://github.com/projectsveltos",children:"Sveltos"})," provides the ability to perform not only ",(0,s.jsx)(t.strong,{children:"Day-1"})," operations but also helps platform administrators, tenant administrators and other operators with ",(0,s.jsx)(t.strong,{children:"Day-2"})," operations. For example, we can use the ",(0,s.jsx)(t.a,{href:"https://github.com/projectsveltos/libsveltos/blob/main/api/v1beta1/healthcheck_type.go",children:"HealthCheck"})," and the ",(0,s.jsx)(t.a,{href:"https://raw.githubusercontent.com/projectsveltos/libsveltos/main/api/v1beta1/clusterhealthcheck_type.go",children:"ClusterHealthCheck"})," features to not only watch the health of a cluster but also collect information from the ",(0,s.jsx)(t.code,{children:"managed"})," clusters and display them in the ",(0,s.jsx)(t.code,{children:"management"})," cluster."]}),"\n",(0,s.jsxs)(t.p,{children:["In today's blog post, we will cover a way of deploying ",(0,s.jsx)(t.a,{href:"https://cilium.io/",children:"Cilium"})," as our CNI alongside ",(0,s.jsx)(t.a,{href:"https://tetragon.io/",children:"Cilium Tetragon"})," for observability. We will then continue with a simple ",(0,s.jsx)(t.code,{children:"TracingPolicy"})," deployment to capture socket connections and then use Sveltos to display the tracing results back to the ",(0,s.jsx)(t.code,{children:"management"})," cluster."]}),"\n",(0,s.jsx)(t.p,{children:"The goal of the demonstration is to showcase how Sveltos can be used for different Kubernetes cluster operations based on the use case at hand."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"title image reading &quot;Sveltos Health Check&quot;",src:n(2489).A+"",width:"5065",height:"3158"})}),"\n",(0,s.jsx)(t.h2,{id:"lab-setup",children:"Lab Setup"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"+-----------------+-------------------+--------------------------+\n|   Cluster Name  |        Type       |         Version          |\n+-----------------+-------------------+--------------------------+\n|      mgmt       |   Mgmt Cluster    |      v1.28.9+rke2r1      |\n| tetragon-test   |  Managed Cluster  |      v1.29.2+k3s1        |\n+-----------------+-------------------+--------------------------+\n\n+-------------+---------------------+\n|  Deployment  |        Version     |\n+-------------+---------------------+\n|    Cilium    |       v1.16.1      |\n|   Tetragon   |       v1.2.0       |\n|  sveltosctl  |       v0.37.0      |\n+-------------+---------------------+\n\n"})}),"\n",(0,s.jsx)(t.h2,{id:"github-resources",children:"GitHub Resources"}),"\n",(0,s.jsxs)(t.p,{children:["The YAML definition files are located ",(0,s.jsx)(t.a,{href:"https://github.com/egrosdou01/sveltos-demo-resources/tree/main/day-2-operations/sveltos-cilium-tetragon",children:"here"}),"."]}),"\n",(0,s.jsx)(t.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsx)(t.p,{children:"To follow along, ensure the below are satisfied."}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsx)(t.li,{children:"A management cluster with Sveltos installed"}),"\n",(0,s.jsx)(t.li,{children:"kubectl installed"}),"\n",(0,s.jsx)(t.li,{children:"sveltosctl installed"}),"\n"]}),"\n",(0,s.jsx)(t.admonition,{type:"tip",children:(0,s.jsxs)(t.p,{children:["If you are unaware of installing Sveltos in a Kubernetes cluster, follow the instructions mentioned ",(0,s.jsx)(t.a,{href:"https://projectsveltos.github.io/sveltos/getting_started/install/install/",children:"here"}),"."]})}),"\n",(0,s.jsx)(t.h2,{id:"step-1-cluster-registration-withsveltos",children:"Step 1: Cluster Registration with\xa0Sveltos"}),"\n",(0,s.jsxs)(t.p,{children:["Once the Kubernetes cluster is ready, we can continue with the Sveltos registration. To do that, we will utilise ",(0,s.jsx)(t.code,{children:"sveltosctl"}),". The ",(0,s.jsx)(t.code,{children:"sveltosctl"})," can be downloaded ",(0,s.jsx)(t.a,{href:"https://github.com/projectsveltos/sveltosctl/releases",children:"here"}),"."]}),"\n",(0,s.jsx)(t.h3,{id:"example-registration",children:"Example Registration"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"$ sveltosctl register cluster --namespace=test --cluster=tetragon-test \\\n    --kubeconfig=/home/test/tetragon-test.yaml \\\n    --labels=env=test\n"})}),"\n",(0,s.jsxs)(t.p,{children:["The cluster above will be registered with Sveltos on the mentioned ",(0,s.jsx)(t.strong,{children:"namespace"}),", and ",(0,s.jsx)(t.strong,{children:"name"}),", and will attach the cluster labels to perform different deployment versions."]}),"\n",(0,s.jsx)(t.admonition,{type:"note",children:(0,s.jsx)(t.p,{children:"If the namespace does not exist in the management cluster, the command will fail with the namespace not found error. Ensure the defined namespace exists in the cluster before registration."})}),"\n",(0,s.jsx)(t.h3,{id:"validation",children:"Validation"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"$ export KUBECONFIG=<Sveltos managament cluster>\n\n$ kubectl get sveltoscluster -A --show-labels\nNAMESPACE   NAME          READY   VERSION          LABELS\nmgmt        mgmt            true    v1.28.9+rke2r1   projectsveltos.io/k8s-version=v1.28.9,sveltos-agent=present\ntest        tetragon-test   true    v1.29.2+k3s1     env=test,projectsveltos.io/k8s-version=v1.29.2,sveltos-agent=present\n"})}),"\n",(0,s.jsx)(t.admonition,{type:"tip",children:(0,s.jsx)(t.p,{children:"Ensure the labels set are correct. We will use them at a later step."})}),"\n",(0,s.jsx)(t.h2,{id:"step-2-custom-configmap-cilium-tetragon-deployment",children:"Step 2: Custom ConfigMap, Cilium, Tetragon Deployment"}),"\n",(0,s.jsxs)(t.p,{children:["As a first step, we will deploy ",(0,s.jsx)(t.strong,{children:"Cilium"})," and ",(0,s.jsx)(t.strong,{children:"Cilium Tetragon"})," to the clusters with the label set to ",(0,s.jsx)(t.code,{children:"env:test"}),". Then, we will deploy a ",(0,s.jsx)(t.code,{children:"ConfigMap"})," on the ",(0,s.jsx)(t.code,{children:"management"})," cluster and allow Sveltos to deploy a ",(0,s.jsx)(t.code,{children:"TracingPolicy"})," alongside a ",(0,s.jsx)(t.code,{children:"CronJob"})," that polls tracing events every 2 minutes from the targeted ",(0,s.jsx)(t.code,{children:"managed"})," cluster."]}),"\n",(0,s.jsx)(t.h3,{id:"clusterprofile---cilium-tetragon-and-configmap",children:"ClusterProfile - Cilium, Tetragon, and ConfigMap"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",children:"---\napiVersion: config.projectsveltos.io/v1beta1\nkind: ClusterProfile\nmetadata:\n  name: tetragon-test-deploy\nspec:\n  clusterSelector:\n    matchLabels:\n      env: test\n  helmCharts:\n  - chartName: cilium/cilium\n    chartVersion: 1.16.1\n    helmChartAction: Install\n    releaseName: cilium\n    releaseNamespace: kube-system\n    repositoryName: cilium\n    repositoryURL: https://helm.cilium.io/\n  - chartName: cilium/tetragon\n    chartVersion: 1.2.0\n    helmChartAction: Install\n    releaseName: tetragon\n    releaseNamespace: kube-system\n    repositoryName: tetragon\n    repositoryURL: https://helm.cilium.io/\n  policyRefs:\n  - name: tetragon-policy-socket-log\n    namespace: default\n    kind: ConfigMap\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Sveltos follows the top-down approach when it comes to add-on and application deployment. First, Cilium will get deployed as our CNI. Next, then ",(0,s.jsx)(t.strong,{children:"Tetragon"})," and afterwards, we proceed with the deployment of a ",(0,s.jsx)(t.code,{children:"ConfigMap"})," with the name ",(0,s.jsx)(t.code,{children:"tetragon-policy-socket-log"})," which has already been deployed in the ",(0,s.jsx)(t.code,{children:"management"})," cluster."]}),"\n",(0,s.jsx)(t.admonition,{type:"tip",children:(0,s.jsxs)(t.p,{children:["A copy of the ",(0,s.jsx)(t.code,{children:"ConfigMap"})," YAML definition is located ",(0,s.jsx)(t.a,{href:"https://github.com/egrosdou01/sveltos-demo-resources/blob/main/day-2-operations/sveltos-cilium-tetragon/env-test/tetragon_configmap.yaml",children:"here"}),"."]})}),"\n",(0,s.jsx)(t.h3,{id:"deploy-configmap-and-clusterprofile---management-cluster",children:"Deploy ConfigMap and ClusterProfile - Management Cluster"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"$ export KUBECONFIG=<Sveltos managament cluster> \n\n$ kubectl apply -f tetragon_cm.yaml,clusterprofile_tetragon.yaml\n"})}),"\n",(0,s.jsx)(t.h3,{id:"validation---management-cluster",children:"Validation - Management Cluster"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"$ ./sveltosctl show addons                                         \n+--------------------+----------------------------------------------+-------------+-------------------------------+---------+--------------------------------+-------------------------------------+\n|      CLUSTER       |                RESOURCE TYPE                 |  NAMESPACE  |             NAME              | VERSION |              TIME              |              PROFILES               |\n+--------------------+----------------------------------------------+-------------+-------------------------------+---------+--------------------------------+-------------------------------------+\n| test/tetragon-test | helm chart                                   | kube-system | cilium                        | 1.16.1  | 2024-10-06 09:28:12 +0200 CEST | ClusterProfile/tetragon-test-deploy |\n| test/tetragon-test | helm chart                                   | kube-system | tetragon                      | 1.2.0   | 2024-10-06 09:28:15 +0200 CEST | ClusterProfile/tetragon-test-deploy |\n| test/tetragon-test | rbac.authorization.k8s.io:ClusterRoleBinding |             | tetragon-cluster-role-binding | N/A     | 2024-10-06 09:28:12 +0200 CEST | ClusterProfile/tetragon-test-deploy |\n| test/tetragon-test | batch:CronJob                                | default     | tetragon-log-fetcher          | N/A     | 2024-10-06 09:28:12 +0200 CEST | ClusterProfile/tetragon-test-deploy |\n| test/tetragon-test | cilium.io:TracingPolicy                      |             | networking                    | N/A     | 2024-10-06 09:28:12 +0200 CEST | ClusterProfile/tetragon-test-deploy |\n| test/tetragon-test | :ServiceAccount                              | default     | tetragon-sa                   | N/A     | 2024-10-06 09:28:12 +0200 CEST | ClusterProfile/tetragon-test-deploy |\n| test/tetragon-test | rbac.authorization.k8s.io:ClusterRole        |             | tetragon-cluster-role         | N/A     | 2024-10-06 09:28:12 +0200 CEST | ClusterProfile/tetragon-test-deploy |\n+--------------------+----------------------------------------------+-------------+-------------------------------+---------+--------------------------------+-------------------------------------+\n"})}),"\n",(0,s.jsx)(t.h3,{id:"validation---managed-cluster",children:"Validation - Managed Cluster"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:'$ kubectl get pods -n kube-system | grep -E "cilium|tetragon"\ncilium-operator-8547744bd7-qhl7r     1/1     Running   0          4m30s\ncilium-operator-8547744bd7-m26lh     1/1     Running   0          4m30s\ntetragon-mln8g                       2/2     Running   0          4m29s\ntetragon-c7gwj                       2/2     Running   0          4m29s\ntetragon-tjx54                       2/2     Running   0          4m29s\ncilium-g7ftd                         1/1     Running   0          4m30s\ncilium-pv9gj                         1/1     Running   0          4m30s\ncilium-9cr4l                         1/1     Running   0          4m30s\ncilium-envoy-9kjnv                   1/1     Running   0          4m30s\ncilium-envoy-fpqkl                   1/1     Running   0          4m30s\ncilium-envoy-25gvv                   1/1     Running   0          4m30s\ntetragon-operator-55c555fcf4-s5mvs   1/1     Running   0          4m29s\n\n$ kubectl get cronjobs,jobs,pods\nNAME                                 SCHEDULE      SUSPEND   ACTIVE   LAST SCHEDULE   AGE\ncronjob.batch/tetragon-log-fetcher   */2 * * * *   False     0        98s             5m26s\n\nNAME                                      COMPLETIONS   DURATION   AGE\njob.batch/install-traefik2-nodeport-te    1/1           11s        47h\njob.batch/tetragon-log-fetcher-28803330   1/1           10s        3m38s\njob.batch/tetragon-log-fetcher-28803332   1/1           9s         98s\n\nNAME                                      READY   STATUS      RESTARTS   AGE\npod/install-traefik2-nodeport-te-zrh57    0/1     Completed   0          47h\npod/tetragon-log-fetcher-28803330-wpl9r   0/1     Completed   0          3m38s\npod/tetragon-log-fetcher-28803332-r7q5v   0/1     Completed   0          98s\n'})}),"\n",(0,s.jsxs)(t.p,{children:["Based on the output above, we have deployed ",(0,s.jsx)(t.strong,{children:"Cilium"}),", ",(0,s.jsx)(t.strong,{children:"Tetragon"})," and a ",(0,s.jsx)(t.strong,{children:"CronJob"})," to collect Tetragon logs based on a tracing policy every 2 minutes with a timeout of 5 sec. \ud83c\udf89 We can proceed further and use the Sveltos ",(0,s.jsx)(t.code,{children:"ClucterHealthCheck"})," and ",(0,s.jsx)(t.code,{children:"HealthCheck"})," to collect the data of the newly created ",(0,s.jsx)(t.code,{children:"ConfiMap"})," in the managed cluster."]}),"\n",(0,s.jsx)(t.admonition,{type:"note",children:(0,s.jsxs)(t.p,{children:["If the defined ",(0,s.jsx)(t.code,{children:"ConfigMap"})," or ",(0,s.jsx)(t.code,{children:"CronJob"})," does not fit your needs, feel free to update the YAML definitions based on your liking."]})}),"\n",(0,s.jsx)(t.h2,{id:"step-3-deploy-clusterhealthcheck-and-healthcheck",children:"Step 3: Deploy ClusterHealthCheck and HealthCheck"}),"\n",(0,s.jsxs)(t.p,{children:["To be able to collect resources from the Sveltos managed cluster, we will use a new YAML definition to collect the data from the ",(0,s.jsx)(t.code,{children:"ConfigMap"})," with the name ",(0,s.jsx)(t.code,{children:"tetragon-logs"}),"."]}),"\n",(0,s.jsx)(t.admonition,{type:"tip",children:(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"ConfigMap tetragon-logs"})," is ",(0,s.jsx)(t.strong,{children:"created"})," and ",(0,s.jsx)(t.strong,{children:"patched"})," with a periodic execution of ",(0,s.jsx)(t.code,{children:"Jobs"})," mentioned in Step 2."]})}),"\n",(0,s.jsx)(t.h3,{id:"healthcheck-and-clusterhealthcheck-defintion",children:"HealthCheck and ClusterHealthCheck Defintion"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",children:'# Collect the resource of the ConfigMap with the name `tetragon-logs`\n---\napiVersion: lib.projectsveltos.io/v1beta1\nkind: HealthCheck\nmetadata:\n  name: tetragon-log-fetcher\nspec:\n  collectResources: true\n  resourceSelectors:\n  - group: ""\n    version: "v1"\n    kind: "ConfigMap"\n    name: tetragon-logs\n    namespace: default\n  evaluateHealth: |\n    function evaluate()\n      local statuses = {}\n\n      for _,resource in ipairs(resources) do\n        status = "Degraded"\n        table.insert(statuses, {resource=resource, status = status, message = resource.data["tetragon-logs.txt"]})\n      end\n\n      local hs = {}\n      if #statuses > 0 then\n        hs.resources = statuses \n      end\n      return hs\n    end\n# Get the ConfigMap data and send it to the management cluster\n---\napiVersion: lib.projectsveltos.io/v1beta1\nkind: ClusterHealthCheck\nmetadata:\n  name: tetragon-log-fetcher\nspec:\n  clusterSelector:\n    matchLabels:\n      env: test\n  livenessChecks:\n  - name: tetragon-log-fetcher\n    type: HealthCheck\n    livenessSourceRef:\n      kind: HealthCheck\n      apiVersion: lib.projectsveltos.io/v1beta1\n      name: tetragon-log-fetcher\n  notifications:\n  - name: event\n    type: KubernetesEvent\n'})}),"\n",(0,s.jsx)(t.h3,{id:"deploy-healthcheck-and-clusterhealthcheck---management-cluster",children:"Deploy HealthCheck and ClusterHealthCheck - Management Cluster"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"$ export KUBECONFIG=<Sveltos managament cluster> \n\n$ kubectl apply -f tetragon_healthcheck_logs.yaml\n"})}),"\n",(0,s.jsx)(t.h3,{id:"validation---management-cluster-1",children:"Validation - Management Cluster"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"$ ./sveltosctl show resources\n+--------------------+---------------------+-----------+---------------+--------------------------------------------------------------------------------------------------------------+\n|      CLUSTER       |         GVK         | NAMESPACE |     NAME      |                                                   MESSAGE                                                    |\n+--------------------+---------------------+-----------+---------------+--------------------------------------------------------------------------------------------------------------+\n| test/tetragon-test | /v1, Kind=ConfigMap | default   | tetragon-logs | \ud83d\udd0c connect kube-system/coredns-6799fbcd5-4bv5r /coredns tcp 127.0.0.1:35846 ->                               |\n|                    |                     |           |               | 127.0.0.1:8080 \ud83e\uddf9 close   kube-system/coredns-6799fbcd5-4bv5r /coredns tcp 127.0.0.1:35846                   |\n|                    |                     |           |               | -> 127.0.0.1:8080 \ud83e\uddf9 close   kube-system/coredns-6799fbcd5-4bv5r /coredns tcp 127.0.0.1:8080                 |\n|                    |                     |           |               | -> 127.0.0.1:35846 \ud83d\udd0c connect kube-system/coredns-6799fbcd5-4bv5r /coredns tcp                               |\n|                    |                     |           |               | 127.0.0.1:35852 -> 127.0.0.1:8080 \ud83e\uddf9 close   kube-system/coredns-6799fbcd5-4bv5r /coredns tcp                |\n|                    |                     |           |               | 127.0.0.1:35852 -> 127.0.0.1:8080 \ud83e\uddf9 close   kube-system/coredns-6799fbcd5-4bv5r /coredns tcp                |\n|                    |                     |           |               | 127.0.0.1:8080 -> 127.0.0.1:35852 \ud83d\udd0c connect k3s-tetragon-9ab2-92fa7d-node-pool-df07-7inhp                   |\n|                    |                     |           |               | /var/lib/rancher/k3s/data/7d0aa19ffc230d4322f04d1ae8783e54ce189dfc4cbfa0a6afcdcabec2346d0c/bin/k3s           |\n+--------------------+---------------------+-----------+---------------+--------------------------------------------------------------------------------------------------------------+\n"})}),"\n",(0,s.jsxs)(t.p,{children:["From the output above, we see the logs collected from the Tetragon TracingPolicy coming from a ",(0,s.jsx)(t.code,{children:"managed"})," cluster and making them available in a ",(0,s.jsx)(t.code,{children:"management"})," cluster! Cool, right? The same approach can be used with different data located in the ",(0,s.jsx)(t.code,{children:"managed"})," clusters. A post written by Gianluca outlining the collection of ",(0,s.jsx)(t.code,{children:"kube-bench"})," scanning results can be found ",(0,s.jsx)(t.a,{href:"https://itnext.io/ensurincis-benchmark-compliance-across-multiple-kubernetes-clusters-dd544682e786",children:"here"}),"."]}),"\n",(0,s.jsx)(t.h2,{id:"sveltos-for-day-2-operations-benefits",children:"Sveltos for Day-2 Operations Benefits"}),"\n",(0,s.jsxs)(t.p,{children:["Sveltos allows users to deploy the required add-on and deployments to a fleet of clusters while allowing platform administrators and operators to ",(0,s.jsx)(t.strong,{children:"enhance"})," the ",(0,s.jsx)(t.strong,{children:"security posture"})," and ",(0,s.jsx)(t.strong,{children:"observability"})," of the clusters in a simple and meaningful way. Use the Sveltos ",(0,s.jsx)(t.code,{children:"Event Framework"}),", ",(0,s.jsx)(t.code,{children:"Tiers"}),", ",(0,s.jsx)(t.code,{children:"ClusterHealthCheck"}),", and ",(0,s.jsx)(t.code,{children:"HealthCheck"})," features to enhance the posture of different platforms!"]}),"\n",(0,s.jsx)(t.h2,{id:"conclusions",children:"Conclusions"}),"\n",(0,s.jsx)(t.p,{children:"In a few minutes \u23f3, with minimal configuration effort and following the GitOps approach, we deployed Cilium as our CNI, Cilium Tetragon for observability alongside polling and displaying of critical tracing results to the management cluster painlessly! \ud83c\udf89"}),"\n",(0,s.jsx)(t.p,{children:"In the next blog posts, we will touch on topics around Day-2 operations."}),"\n",(0,s.jsx)(t.h2,{id:"resources",children:"Resources"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Cilium Labs"}),": ",(0,s.jsx)(t.a,{href:"https://isovalent.com/resource-library/labs/",children:"https://isovalent.com/resource-library/labs/"})]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Tetragon - Getting Started Lab"}),": ",(0,s.jsx)(t.a,{href:"https://isovalent.com/labs/tetragon-getting-started/",children:"https://isovalent.com/labs/tetragon-getting-started/"})]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Sveltos ClusterHealthCheck/HealthCheck"}),": ",(0,s.jsx)(t.a,{href:"https://projectsveltos.github.io/sveltos/observability/notifications/#example-configmap-healthcheck",children:"https://projectsveltos.github.io/sveltos/observability/notifications/#example-configmap-healthcheck"})]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Sveltos Event Framework"}),": ",(0,s.jsx)(t.a,{href:"https://projectsveltos.github.io/sveltos/events/addon_event_deployment/",children:"https://projectsveltos.github.io/sveltos/events/addon_event_deployment/"})]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Sveltos Tiers"}),": ",(0,s.jsx)(t.a,{href:"https://projectsveltos.github.io/sveltos/deployment_order/tiers/",children:"https://projectsveltos.github.io/sveltos/deployment_order/tiers/"})]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"\ufe0f-contact",children:"\u2709\ufe0f Contact"}),"\n",(0,s.jsxs)(t.p,{children:["We are here to help! Whether you have questions, or issues or need assistance, our Slack channel is the perfect place for you. Click here to ",(0,s.jsx)(t.a,{href:"https://app.slack.com/client/T0471SNT5CZ/C06UZCXQLGP",children:"join us"})," us."]}),"\n",(0,s.jsx)(t.h2,{id:"-support-thisproject",children:"\ud83d\udc4f Support this\xa0project"}),"\n",(0,s.jsxs)(t.p,{children:["Every contribution counts! If you enjoyed this article, check out the Projectsveltos ",(0,s.jsx)(t.a,{href:"https://github.com/projectsveltos",children:"GitHub repo"}),". You can ",(0,s.jsx)(t.a,{href:"https://github.com/projectsveltos",children:"star \ud83c\udf1f the project"})," if you find it helpful."]}),"\n",(0,s.jsx)(t.p,{children:"The GitHub repo is a great resource for getting started with the project. It contains the code, documentation, and many more examples."}),"\n",(0,s.jsx)(t.p,{children:"Thanks for reading!"})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},2489:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/Sveltos_Cilium_Tetragon_HealthCheck-d992c3bba4b4e87aa2c374f5216ba190.jpg"},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>a});var s=n(6540);const o={},l=s.createContext(o);function i(e){const t=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(l.Provider,{value:t},e.children)}}}]);